(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{194:function(n,e,t){"use strict";t.r(e);var a=t(0),i=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"vue-基础练习-demo-一个-input-number-组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-基础练习-demo-一个-input-number-组件","aria-hidden":"true"}},[n._v("#")]),n._v(" Vue 基础练习 demo: 一个 input-number 组件")]),n._v(" "),t("blockquote",[t("p",[n._v("最近在学习 Vue,看完官方文档基础部分做了一个小 demo, 提供一个输入框和可供加减操作的按钮, 旨在联系 Vue 的相关基础知识. 本文主要以代码为主")])]),n._v(" "),t("h3",{attrs:{id:"创建相关文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建相关文件","aria-hidden":"true"}},[n._v("#")]),n._v(" 创建相关文件")]),n._v(" "),t("p",[n._v("一个 index.html 文件, 一个 index.js 文件, 还有一个输入框组件文件: input-number.js 文件")]),n._v(" "),t("h3",{attrs:{id:"编辑-input-number-js-组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编辑-input-number-js-组件","aria-hidden":"true"}},[n._v("#")]),n._v(" 编辑 input-number.js 组件")]),n._v(" "),t("p",[n._v("直接上代码:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('\n// 判断是否为数字\nfunction isValueNumber(value) {\n    return (/(^-?[0-9]+\\.{1}\\d+$)|(^-?[1-9][0-9]*$)|(^-?0{1}$)/).test(value + \'\');\n}\n\n// 数字输入框组件\nVue.component(\'input-number\', {\n    template: `\n        <div class="input-number">\n            <input\n                type="text"\n                @keyup.down="handleDown"\n                @keyup.up="handleUp"\n                :value="currentValue"\n                @change="handleChange">\n            <button\n                @click="handleDown"\n                :disabled="currentValue <= min">-</button>\n            <button\n                @click.down="handleUp"\n                :disabled="currentValue >= max">+</button>\n        </div>`,\n        // 组件 props\n        props: {\n            max: {\t// 最大值\n                type: Number,\n                default: Infinity\n            },\n            min: {\t// 最小值\n                type: Number,\n                default: -Infinity\n            },\n            value: {\t// 当前值\n                type: Number,\n                default: 0\n            }\n        },\n        data() {\n            return {\n                currentValue: this.value\n            }\n        },\n        // 观察探测当前值是否变化\n        watch: {\n            currentValue(val) {\n                this.$emit(\'input\', val);\n                this.$emit(\'on-change\', val);\n            },\n            value(val) {\n                this.updateValue(val);\n            }\n        },\n        methods: {\n            // 更新当前值\n            updateValue(val) {\n                if (val > this.max) val = this.max;\n                if (val < this.min) val = this.min;\n                this.currentValue = val;\n            },\n            // 按下减号或者方向键下的事件\n            handleDown() {\n                if (this.currentValue <= this.min) return;\n                this.currentValue -= 1;\n            },\n            // 按下加号或者方向键上的事件\n            handleUp() {\n                if (this.currentValue >= this.max) return;\n                this.currentValue += 1;\n            },\n            // 监听input变化事件\n            handleChange(event) {\n                let val = event.target.value.trim();\n                let max = this.max;\n                let min = this.min;\n\n                if (isValueNumber(val)) {\n                    val = Number(val);\n                    this.currentValue = val;\n\n                    if (val > max) {\n                        this.currentValue = max;\n                    } else if (val < min) {\n                        this.currentValue = min;\n                    }\n                } else {\n                    event.target.value = this.currentValue;\n                }\n            }\n        },\n        mounted () {\n            // 更新当前值\n            this.updateValue(this.value);\n        }\n});\n')])])]),t("h3",{attrs:{id:"使用组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用组件","aria-hidden":"true"}},[n._v("#")]),n._v(" 使用组件")]),n._v(" "),t("p",[n._v("在页面引用组件, 并设置最大值和最小值")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    <div id="app">\n        \x3c!-- 引用组件 --\x3e\n        <input-number v-model="value" :max="10" :min="0"></input-numbe>\n    </div>\n\n    <script src="https://cdn.staticfile.org/vue/2.6.2/vue.js"><\/script>\n    <script src="./input-number.js"><\/script>\n    <script src="./index.js"><\/script>\n\n</body>\n</html>\n')])])]),t("h3",{attrs:{id:"创建-vue-实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建-vue-实例","aria-hidden":"true"}},[n._v("#")]),n._v(" 创建 Vue 实例")]),n._v(" "),t("p",[n._v("在 index.js 里创建Vue 实例并设置初始值")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n// 创建 Vue 实例\nlet app = new Vue({\n    el: '#app',\n    data: {\n        value: 0\t// 最初的默认值\n    }\n});\n\n")])])]),t("h3",{attrs:{id:"实现效果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现效果","aria-hidden":"true"}},[n._v("#")]),n._v(" 实现效果")]),n._v(" "),t("p",[n._v("如下所示, 可以点击加减号进行数值的增减, 也可以在 input 聚焦的时候使用键盘上下方向键进行同样操作, 超过最大值或者小于最小值的时候不变化")]),n._v(" "),t("p",[t("img",{attrs:{src:"http://ww1.sinaimg.cn/large/6b65559dgy1g40mxzefexj20k80cn3yn.jpg",alt:""}})])])}],!1,null,null,null);e.default=i.exports}}]);