(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{197:function(a,t,e){"use strict";e.r(t);var s=e(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"vue-学习笔记-二-计算属性-computed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-学习笔记-二-计算属性-computed","aria-hidden":"true"}},[a._v("#")]),a._v(" Vue 学习笔记(二): 计算属性-computed")]),a._v(" "),e("h3",{attrs:{id:"computed-与缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#computed-与缓存","aria-hidden":"true"}},[a._v("#")]),a._v(" computed 与缓存")]),a._v(" "),e("p",[a._v("html 部分")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<div id="app">\n    {{fullName}}\n    <span>{{age}}</span>\n</div>\n')])])]),e("p",[a._v("js 部分")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let app = new Vue({\n    el: '#app',\n    data: {\n        firstName: 'dev',\n        lastName: 'zhang',\n        age: 88\n    },\n    computed: {\n        fullName() {\n            console.log('计算一次');\n            return this.firstName + \" \" + this.lastName\n        }\n    },\n})\n")])])]),e("p",[a._v("实现效果")]),a._v(" "),e("p",[e("img",{attrs:{src:"http://imgs.devzhangjs.com/15614706983022.jpg",alt:""}})]),a._v(" "),e("p",[a._v("动态修改 age 的值, 计算属性不会触发更改, 修改两个参考值中的一个, 计算属性会触发重新计算. 所以计算属性是有缓存的, 在参考值没有发生变化的情况下是不会重复计算和更新 DOM 的, 对性能提升有好处.")]),a._v(" "),e("p",[e("img",{attrs:{src:"http://imgs.devzhangjs.com/15614708416808.jpg",alt:""}})]),a._v(" "),e("h3",{attrs:{id:"computed-与-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#computed-与-function","aria-hidden":"true"}},[a._v("#")]),a._v(" computed 与 function")]),a._v(" "),e("p",[a._v("html 修改为")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<div id="app">\n    {{fullName()}}\n    <span>{{age}}</span>\n</div>\n')])])]),e("p",[a._v("js 代码修改为")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let app = new Vue({\n    el: '#app',\n    data: {\n        firstName: 'dev',\n        lastName: 'zhang',\n        age: 29\n    },\n    methods: {\n        fullName() {\n            console.log('执行一次方法');\n            return this.firstName + ' ' + this.lastName\n        }\n    },\n})\n")])])]),e("p",[a._v("效果图")]),a._v(" "),e("p",[e("img",{attrs:{src:"http://imgs.devzhangjs.com/15614715728040.jpg",alt:""}})]),a._v(" "),e("p",[a._v("这时候虽然效果能实现, 但是每次更新元素里的任何一项, 都会触发方法进行计算, 并更新 DOM,对性能有不必要的浪费")]),a._v(" "),e("h3",{attrs:{id:"computed-与-watch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#computed-与-watch","aria-hidden":"true"}},[a._v("#")]),a._v(" computed 与 watch")]),a._v(" "),e("p",[a._v("js 代码修改")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let app = new Vue({\n    el: '#app',\n    data: {\n        firstName: 'dev',\n        lastName: 'zhang',\n        fullName: 'dev zhang',\n    },\n    watch: {\n        firstName(val) {\n            this.fullName = val + ' ' + this.lastName\n        },\n        lastName(val) {\n            this.fullName = this.firstName + ' ' + val\n        }\n\n    },\n})\n")])])]),e("p",[e("img",{attrs:{src:"http://imgs.devzhangjs.com/15614713168297.jpg",alt:""}})]),a._v(" "),e("p",[a._v("watch 会监听对应的要素值变化, 这样也能实现和 computed 一样的效果, 但代码量会比 computed 多.")])])}],!1,null,null,null);t.default=n.exports}}]);